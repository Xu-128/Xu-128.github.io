<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>多项式笔记</title>
    <link href="/2022/02/28/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/02/28/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="多项式笔记"><a href="#多项式笔记" class="headerlink" title="多项式笔记"></a>多项式笔记</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>定义 $n$ 次多项式 $f(x)=\sum_{i=0}^na_ix^i$，称其最高项系数的次数为该多项式的度，记作 $\deg f$。</p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p>定义如下多项式</p><script type="math/tex; mode=display">f(x)=\sum_{i=0}^na_ix^i\\g(x)=\sum_{i=0}^nb_ix^i\\</script><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><script type="math/tex; mode=display">f(x)+f(y)=\sum_{i=0}^n(a_i+b_i)x^i</script><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><script type="math/tex; mode=display">f(x)-f(y)=\sum_{i=0}^n(a_i-b_i)x^i</script><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><script type="math/tex; mode=display">f(x)\cdot g(x)=\sum_{i=0}^n\sum_{j=0}^na_ib_jx^{i+j}</script><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p>若存在唯一的 $Q(x),~R(x)$ 满足</p><script type="math/tex; mode=display">f(x)=Q(x)g(x)+R(x)\\\deg R < \deg g</script><p>若 $\deg f &gt; \deg g$，此时 $\deg Q=\deg  f-\deg g$，否则有 $Q(x)=0$。称 $Q(x)$ 为 $f(x)$ 除以 $g(x)$ 的商， $R(x)$ 为 $f(x)$ 除以 $g(x)$ 的余数，也可以记作</p><script type="math/tex; mode=display">f(x)\equiv R(x)(mod~g(x))</script><h2 id="朗格拉日插值"><a href="#朗格拉日插值" class="headerlink" title="朗格拉日插值"></a>朗格拉日插值</h2><p>有初中数学可以知道，如果给定平面上的 $n$ 个点，则可以唯一确定一个 $n-1$ 次的多项式（如两点确定一个一次多项式，三点确定一个二次多项式），如果要求出该多项式每一项的系数，可以使用高斯消元法， 时间复杂度为 $O(n^3)$，时间复杂度过高。</p><p>朗格拉日插值法使用构造的方式在 $O(n^2)$ 求解多项式系数。</p><p>首先构造 $n$ 个函数，其中第 $i$ 个函数 $f_i(x)$ 满足<br>$<br>f_i(x)=\begin{cases}<br>0&amp; (x\not=x_i)\\<br>y_i&amp; (x= x_i)<br>\end{cases}<br>$  </p><p>最后要求的多项式 $f(x)=\sum_{i=1}^nf_i(x)$。<br>可以设</p><script type="math/tex; mode=display">f_i(x)=a\cdot\prod_{j\not=i}(x-x_j)</script><p>将 $f_i(x_i)=y_i$ 代入得到</p><script type="math/tex; mode=display">a=\frac{y_i}{\prod_{j\not ={i}}}(x_i-x_j)</script><p>所以</p><script type="math/tex; mode=display">f(x)=\sum_{i=1}^ny_i\prod_{j\not ={i}}\frac{x-x_j}{x_i-x_j}</script><script>var a=document.getElementsByTagName("h1");for(var i=0;i<a.length;++i)if(a[i].parentNode.className.indexOf("markdown-body")>-1)document.getElementById("subtitle").title=a[i].innerHTML,a[i].parentNode.removeChild(a[i]);</script>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>多项式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反演浅谈</title>
    <link href="/2022/02/27/%E5%8F%8D%E6%BC%94/"/>
    <url>/2022/02/27/%E5%8F%8D%E6%BC%94/</url>
    
    <content type="html"><![CDATA[<!-- <font size=6><center><b>反演浅谈</b></center></font> --><!-- <h1 style="border-style:none;text-align:center;">反演浅谈</h1> --><h1 id="反演浅谈"><a href="#反演浅谈" class="headerlink" title="反演浅谈"></a>反演浅谈</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>如果有离散函数 $f$ 能推导出 离散函数 $g$，则称这个过程为“演绎”，如果我们知道了演绎的过程，想通过 $g$ 推出 $f$，这个过程通常称作“反演”。</p><p>如果两函数没有特殊性质，反演只能通过高斯消元求解，但是如果函数之间满足某种特定关系，则可以使用某些特定方式进行求解。</p><h2 id="二项式反演"><a href="#二项式反演" class="headerlink" title="二项式反演"></a>二项式反演</h2><h3 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h3><script type="math/tex; mode=display">g_n=\sum_{i=0}^n\binom{n}{i}f_i\iff f_n=\sum_{i=0  }^n(-1)^{n-i}\binom{n}{i}g_i</script><p>左边为演绎过程，右边为反演过程。</p><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>先将左边带入右边，</p><script type="math/tex; mode=display">\sum_{i=0}^n(-1)^{n-i}\binom{n}{i}g_i=\sum_{i=0}^n(-1)^{n-i}\binom{n}{i}\sum_{j=0}^i\binom{n}{j}f_j</script><p>考虑交换枚举顺序（交换之前可以认为是在逐行枚举杨辉三角，交换之后可以视作按列枚举杨辉三角），</p><script type="math/tex; mode=display">\sum_{j=0}^n\sum_{i=j}^n(-1)^{n-i}\binom{n}{i}\binom{i}{j}f_j</script><p>将中间的组合数拆开来算，</p><script type="math/tex; mode=display">\binom{n}{i}\binom{i}{j}=\frac{n!}{i!(n-i)!}\cdot\frac{i!}{j!(i-j)!}=\frac{n!}{j!(n-j)!}\cdot\frac{(n-j)!}{(n-i)!(i-j)!}=\binom{n}{j}\binom{n-j}{n-i}</script><p>原式等于</p><script type="math/tex; mode=display">\sum_{j=0}^n\sum_{i=j}^n(-1)^{n-i}\binom{n}{j}\binom{n-j}{n-i}f_j</script><p>将和 $i$ 无关的提到前面，</p><script type="math/tex; mode=display">\sum_{j=0}^n\binom{n}{j}f_j\sum_{i=j}^n(-1)^{n-i}\binom{n-j}{n-i}</script><p>第二个求和符号改为枚举 $k$，使得 $i=n-k$，</p><script type="math/tex; mode=display">\sum_{j=0}^m\binom{n}{j}f_j\sum_{k=0}^{n-j}(-1)^{k}\binom{n-j}{n-k}</script><p>然后可以分情况讨论，</p><ul><li>如果 $j\not= n$，后面的和式可以使用二项式定理求出和为 $0$。</li><li>如果 $j=n$，和式为 $\binom{n}{n}f_n\cdot 1$。</li></ul><p>所以等式得证。</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>看几个例子吧。</p><h4 id="错排问题"><a href="#错排问题" class="headerlink" title="错排问题"></a>错排问题</h4><p>起初 $n$ 个物品一一对应地放进 $n$ 个盒子里，然后打乱顺序，问任意物品都不在原来位置的方案数。</p><p>设 $f_i$ 表示有 $i$ 个物品不在原来位置的方案数， $g_i$ 表示所有的方案数。很容易得到下式</p><script type="math/tex; mode=display">g_i=\sum_{i=0}^n\binom{n}{i}f_i</script><p>根据二项式反演可以得到</p><script type="math/tex; mode=display">f_n=\sum_{i=0}^n(-1)^{n-i}\binom{n}{i}g_i</script><p>注意到 $g_n=n!$，所以</p><script type="math/tex; mode=display">f_n=\sum_{i=0}^n(-1)^{n-i}\frac{n!}{i!(n-i)!}\cdot i!</script><p>略微整理一下</p><script type="math/tex; mode=display">f_n=n!\sum_{i=0}^n\frac{(-1)^{n-i}}{(n-i)!}</script><p>改变一下 $i$ 的含义（令 $i=n-i$），</p><script type="math/tex; mode=display">f_n=n!\sum_{i=0}^n\frac{(-1)^i}{i!}</script><p>然后我们就得到了错排的通项公式！</p><h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><h3 id="狄利克雷卷积"><a href="#狄利克雷卷积" class="headerlink" title="狄利克雷卷积"></a>狄利克雷卷积</h3><p>定义两个数论函数的的卷积 $(f*g)(n):=\sum_{e|n}f(e)g(\frac{n}{e})$。<br>迪利克雷卷积的单位元为 $\varepsilon(n)=[n==1]$。</p><p>卷积运算主要有以下推论：</p><ul><li>$\mu * I = \varepsilon$</li><li>$\varphi * I = Id$</li><li>$\sigma * \mu=I * I * \mu = I * \varepsilon=I$，其中 $\sigma$ 表示约数个数函数。</li></ul><h3 id="反演形式"><a href="#反演形式" class="headerlink" title="反演形式"></a>反演形式</h3><p>若 $g(n)=\sum_{e|b}f(e)$，即 $g=f*I$，根据卷积的推论可以得到</p><script type="math/tex; mode=display">f*I*\mu=g*\mu\Rightarrow f=g*\mu</script><p>若 $g$ 有简洁的通项公式，加之 $\mu$ 可以使用线性筛或者杜教筛等方法，可以在 $O(n)$ 甚至 $O(n^{\frac{2}{3}})$ 的时间内求解 $f(n)$。</p><script>var a=document.getElementsByTagName("h1");for(var i=0;i<a.length;++i)if(a[i].parentNode.className.indexOf("markdown-body")>-1)document.getElementById("subtitle").title=a[i].innerHTML,a[i].parentNode.removeChild(a[i]);</script>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开端</title>
    <link href="/2022/02/27/%E5%BC%80%E7%AB%AF/"/>
    <url>/2022/02/27/%E5%BC%80%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<p>2022-02-27：__Xu128’s Blog 搭建完成！</p>]]></content>
    
    
    <categories>
      
      <category>开端</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
